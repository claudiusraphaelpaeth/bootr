#!/bin/bash -e
dir="$(dirname "$(readlink -f "$0")")"
cd "$dir"
source config.sh

if ! mountpoint -q "$efi"; then
  echo "error: $efi is not a mountpoint" >&2
  exit 1
fi

if command -v grub-mkstandalone > /dev/null; then
  grub_mkstandalone=grub-mkstandalone
elif command -v grub2-mkstandalone > /dev/null; then
  grub_mkstandalone=grub2-mkstandalone
else
  echo "can't find grub-mkstandalone" >&2
  exit 255
fi

# set ourselves up in a temporary dir and start building our GRUB image

tmp="$(mktemp -d)"
trap "{ rm -rf $tmp; }" EXIT

mkdir -p "$tmp/boot/grub"
cat >> "$tmp/boot/grub/grub.cfg" <<EOF
# vim: ft=grub
set root_pool="${pool}"
set root_uuid="${uuid}"
set root_uuid_raw="$(sed "s/-//g" <<< "${uuid}")"
set timeout=0

if keystatus --shift; then
  set timeout=-1
fi

set gfxmode=auto
set gfxpayload=keep
set menu_color_normal=cyan/blue
set menu_color_highlight=blue/cyan

while ! cryptomount -u \${root_uuid_raw}; do
  echo restarting authentication
done
echo access granted

if keystatus --shift; then
  set timeout=-1
fi

search --no-floppy --label --set \${root_pool}
source /${dataset_name}/@/grub.cfg
EOF
modules='gfxterm gfxmenu font part_gpt part_msdos luks zfs'
efi_modules="efi_gop efi_uga $modules"
bios_modules="vbe $modules"

echo "building EFI GRUB image" >&2

(cd "$tmp" && ${grub_mkstandalone} -O x86_64-efi --modules="$efi_modules" --locales='en@quot' --themes='' -o bootx64.efi boot/grub/grub.cfg)

if [ -n "$sign" ]; then
  sbsign --key "${sign}.key" --cert "${sign}.crt" --output "$tmp/bootx64.efi.signed" "$tmp/bootx64.efi"
  mv "$tmp/bootx64.efi.signed" "$tmp/bootx64.efi"
fi

mkdir -p "$efi/EFI/BOOT"
mv "$tmp/bootx64.efi" "$efi/EFI/BOOT/bootx64.efi"

echo "built EFI GRUB image" >&2

if [ "$bios" = y ] || [ "$bios" = yes ] || [ "$bios" = true ] || [ "$bios" = 1 ]; then
  echo "building BIOS GRUB" >&2
  efi_dev="$(mount | awk 'BEGIN { ret = 1; } $3 == mountpoint { print $1; ret = 0; exit; } END { exit ret; }' mountpoint="$efi")" || { echo "could not find boot partition" >&2; exit 1; }
  grub-install --target i386-pc --install-modules="$bios_modules" --modules "$bios_modules" --boot-directory "$efi" "$efi_dev"
  echo "built BIOS GRUB" >&2
fi
